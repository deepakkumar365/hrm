╔═══════════════════════════════════════════════════════════════════════════════╗
║                 PRODUCTION DEPLOYMENT QUICK REFERENCE                         ║
║                        HRMS - GitHub/Render/PostgreSQL                        ║
╚═══════════════════════════════════════════════════════════════════════════════╝

📋 DEPLOYMENT IN 4 STEPS:
════════════════════════════════════════════════════════════════════════════════

1️⃣  VERIFY DEVELOPMENT DATABASE (1 min)
    ─────────────────────────────────────
    $ python verify_prod_deployment.py --env dev
    
    ✅ Expected: All checks passed
    ⚠️  If any fail, fix before proceeding

2️⃣  MIGRATE TO PRODUCTION (2 min)
    ──────────────────────────────
    $ python db_migration_to_prod.py --mode full
    
    ✅ This will:
       • Run Alembic migrations on production
       • Export master data from development
       • Import master data to production
       • Verify success

3️⃣  PUSH TO MASTER (1 min)
    ──────────────────────
    $ git checkout master
    $ git pull origin master
    $ git merge origin/development
    $ git push origin master
    
    ✅ Render will automatically:
       • Build application
       • Run migrations (alembic upgrade head)
       • Start service

4️⃣  VERIFY PRODUCTION (1 min)
    ─────────────────────────
    $ python verify_prod_deployment.py --env prod
    
    ✅ Expected: All checks passed
    🎉 DEPLOYMENT COMPLETE!

════════════════════════════════════════════════════════════════════════════════

📊 ENVIRONMENT COMPARISON:
════════════════════════════════════════════════════════════════════════════════

Environment      URL                           Database         Status
───────────────────────────────────────────────────────────────────────────────
Development      http://localhost:5000         DEV_DATABASE_URL Testing
Production       https://prod-url.render.com   PROD_DATABASE_URL Live

════════════════════════════════════════════════════════════════════════════════

🔧 USEFUL COMMANDS:
════════════════════════════════════════════════════════════════════════════════

VERIFICATION:
  Verify development database:
    $ python verify_prod_deployment.py --env dev
  
  Verify production database:
    $ python verify_prod_deployment.py --env prod --report

MIGRATION:
  Full migration (schema + data):
    $ python db_migration_to_prod.py --mode full
  
  Schema only:
    $ python db_migration_to_prod.py --mode schema-only
  
  Data only:
    $ python db_migration_to_prod.py --mode data-only
  
  Initialize fresh production database:
    $ python initialize_prod_database.py

DATABASE:
  Check if production DB is initialized:
    $ python initialize_prod_database.py --check
  
  Alembic current version:
    $ alembic current
  
  Alembic migration history:
    $ alembic history

GIT:
  Verify status before deployment:
    $ git status
  
  Merge development to master:
    $ git checkout master
    $ git merge origin/development
  
  Push to master (triggers deployment):
    $ git push origin master

════════════════════════════════════════════════════════════════════════════════

⚠️  TROUBLESHOOTING:
════════════════════════════════════════════════════════════════════════════════

❌ Problem: Tables don't exist
   Solution: $ python db_migration_to_prod.py --mode schema-only

❌ Problem: Master data not visible
   Solution: $ python db_migration_to_prod.py --mode data-only

❌ Problem: Connection timeout
   Solution: Verify PROD_DATABASE_URL in render.yaml

❌ Problem: Alembic upgrade fails
   Solution: Check Render logs for detailed error message

❌ Problem: Need to rollback
   Solution: git revert HEAD && git push origin master

════════════════════════════════════════════════════════════════════════════════

✅ SUCCESS CRITERIA:
════════════════════════════════════════════════════════════════════════════════

Application is successfully deployed when:

  ✅ Application loads without errors
  ✅ Login functionality works
  ✅ Master data (roles, designations) visible
  ✅ Can create new employees
  ✅ Payroll calculations work
  ✅ No database connection errors
  ✅ All users can access their roles

════════════════════════════════════════════════════════════════════════════════

📞 MONITORING:
════════════════════════════════════════════════════════════════════════════════

Render Dashboard:
  1. Go to: https://render.com/dashboard
  2. Select: noltrion-hrm service
  3. Click: "Logs" tab to watch deployment

Application Health:
  $ curl https://your-prod-url.render.com/health
  Expected: {"status": "healthy"}

Render Service Status:
  • Shows "Live" (green) = Running
  • Shows "Building" (yellow) = Deploying
  • Shows "Failed" (red) = Error

════════════════════════════════════════════════════════════════════════════════

📁 IMPORTANT FILES:
════════════════════════════════════════════════════════════════════════════════

Documentation:
  • PRODUCTION_DB_MIGRATION_GUIDE.md ............ Detailed technical guide
  • PRODUCTION_DEPLOYMENT_QUICK_START.md ....... Quick start in 5 minutes
  • DEPLOYMENT_CHECKLIST.md .................... Complete checklist

Scripts:
  • db_migration_to_prod.py .................... Main migration script
  • verify_prod_deployment.py .................. Verification script
  • initialize_prod_database.py ................ Database initialization
  • export_master_data.py ...................... Export master data (optional)

Configuration:
  • render.yaml ............................... Render deployment config
  • .env.example ............................. Environment template
  • migrations/ .............................. Alembic migrations

════════════════════════════════════════════════════════════════════════════════

🚀 DEPLOY NOW:
════════════════════════════════════════════════════════════════════════════════

Ready to deploy? Run these commands in order:

$ python verify_prod_deployment.py --env dev
$ python db_migration_to_prod.py --mode full
$ git checkout master && git merge origin/development
$ git push origin master
$ python verify_prod_deployment.py --env prod

Monitor at: https://render.com/dashboard

════════════════════════════════════════════════════════════════════════════════

💡 TIPS:
════════════════════════════════════════════════════════════════════════════════

• Always backup development DB before migration
• Test migration in dev environment first
• Don't skip verification steps
• Monitor Render logs during deployment
• Keep this quick reference handy

════════════════════════════════════════════════════════════════════════════════

For detailed information, see: PRODUCTION_DB_MIGRATION_GUIDE.md
For step-by-step guide, see: PRODUCTION_DEPLOYMENT_QUICK_START.md

Last Updated: 2024
Status: Production Ready ✅

════════════════════════════════════════════════════════════════════════════════